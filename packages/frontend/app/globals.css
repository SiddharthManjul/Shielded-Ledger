@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-manrope);
  --font-mono: var(--font-jetbrains-mono);
  --font-display: var(--font-bruno-ace-sc);
  --color-yellow-accent: #ccff00;
  --color-golden: #ffd700;
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.75rem;
  --background: #0a0a0a;
  --foreground: #ffffff;
  --card: #1a1a1a;
  --card-foreground: #ffffff;
  --popover: #1a1a1a;
  --popover-foreground: #ffffff;
  --primary: #ccff00;
  --primary-foreground: #0a0a0a;
  --secondary: #2a2a2a;
  --secondary-foreground: #ffffff;
  --muted: #2a2a2a;
  --muted-foreground: #a3a3a3;
  --accent: #ccff00;
  --accent-foreground: #0a0a0a;
  --destructive: #ef4444;
  --destructive-foreground: #ffffff;
  --border: #404040;
  --input: #2a2a2a;
  --ring: #ccff00;
  --chart-1: #ccff00;
  --chart-2: #ffd700;
  --chart-3: #22c55e;
  --chart-4: #3b82f6;
  --chart-5: #a855f7;
  --sidebar: #1a1a1a;
  --sidebar-foreground: #ffffff;
  --sidebar-primary: #ccff00;
  --sidebar-primary-foreground: #0a0a0a;
  --sidebar-accent: #2a2a2a;
  --sidebar-accent-foreground: #ffffff;
  --sidebar-border: #404040;
  --sidebar-ring: #ccff00;
  
  /* Custom gaming theme colors */
  --yellow-accent: #ccff00;
  --yellow-glow: #ccff0040;
  --golden: #ffd700;
  --dark-bg: #0a0a0a;
  --card-bg: #1a1a1a;
  --hover-bg: #2a2a2a;
  --grid-color: #404040;
}

.dark {
  --background: #0a0a0a;
  --foreground: #ffffff;
  --card: #1a1a1a;
  --card-foreground: #ffffff;
  --popover: #1a1a1a;
  --popover-foreground: #ffffff;
  --primary: #ccff00;
  --primary-foreground: #0a0a0a;
  --secondary: #2a2a2a;
  --secondary-foreground: #ffffff;
  --muted: #2a2a2a;
  --muted-foreground: #a3a3a3;
  --accent: #ccff00;
  --accent-foreground: #0a0a0a;
  --destructive: #ef4444;
  --destructive-foreground: #ffffff;
  --border: #404040;
  --input: #2a2a2a;
  --ring: #ccff00;
  --chart-1: #ccff00;
  --chart-2: #ffd700;
  --chart-3: #22c55e;
  --chart-4: #3b82f6;
  --chart-5: #a855f7;
  --sidebar: #1a1a1a;
  --sidebar-foreground: #ffffff;
  --sidebar-primary: #ccff00;
  --sidebar-primary-foreground: #0a0a0a;
  --sidebar-accent: #2a2a2a;
  --sidebar-accent-foreground: #ffffff;
  --sidebar-border: #404040;
  --sidebar-ring: #ccff00;
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
    background-image: 
      linear-gradient(rgba(64, 64, 64, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(64, 64, 64, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
  }
}

@layer components {
  .glow-button {
    @apply relative overflow-hidden;
    box-shadow: 0 0 20px rgba(204, 255, 0, 0.3);
    transition: all 0.3s ease;
  }
  
  .glow-button:hover {
    box-shadow: 0 0 30px rgba(204, 255, 0, 0.5);
    transform: translateY(-1px);
  }
  
  .glow-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(204, 255, 0, 0.2), transparent);
    transition: left 0.5s;
  }
  
  .glow-button:hover::before {
    left: 100%;
  }
  
  .card-glow {
    @apply bg-card;
    background: linear-gradient(135deg, rgba(26, 26, 26, 0.9), rgba(42, 42, 42, 0.9));
    border: none;
    border-radius: 0;
  }

  /* Add shadows only to card-glow that doesn't have corner cuts */
  .card-glow:not(.card-corner-cut) {
    box-shadow: 
      0 4px 20px rgba(0, 0, 0, 0.5),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }
  
  .card-glow:hover {
    border-color: rgba(204, 255, 0, 0.3);
    box-shadow: 
      0 4px 20px rgba(0, 0, 0, 0.5),
      0 0 20px rgba(204, 255, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }
  
  .yellow-accent {
    color: #ccff00;
  }
  
  .golden-accent {
    color: #ffd700;
  }
  
  .bg-yellow-accent {
    background-color: #ccff00;
  }
  
  .border-yellow-accent {
    border-color: #ccff00;
  }
  
  .text-yellow-accent {
    color: #ccff00;
  }
  
  .grid-pattern {
    background-image: 
      linear-gradient(rgba(64, 64, 64, 0.2) 1px, transparent 1px),
      linear-gradient(90deg, rgba(64, 64, 64, 0.2) 1px, transparent 1px);
    background-size: 40px 40px;
  }
  
  .countdown-box {
    @apply backdrop-blur-sm rounded-lg p-4;
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(204, 255, 0, 0.3);
    box-shadow: 
      0 0 20px rgba(204, 255, 0, 0.1),
      inset 0 1px 0 rgba(204, 255, 0, 0.1);
  }
  
  .text-glow {
    text-shadow: 0 0 10px currentColor;
  }
  
  .font-display {
    font-family: var(--font-bruno-ace-sc);
  }
  
  .font-display-glow {
    font-family: var(--font-bruno-ace-sc);
    text-shadow: 0 0 20px currentColor;
  }
  
  .font-numbers {
    font-family: var(--font-bruno-ace-sc);
    font-variant-numeric: tabular-nums;
  }
  
  /* Apply Bruno Ace SC to all numbers by default */
  .number {
    font-family: var(--font-bruno-ace-sc);
    font-variant-numeric: tabular-nums;
  }

  /* Futuristic Button Variants */
  .futuristic-primary {
    background: linear-gradient(135deg, #ccff00 0%, #ffff00 100%);
    color: #000000;
    border: 2px solid rgba(204, 255, 0, 0.5);
    box-shadow: 
      0 0 20px rgba(204, 255, 0, 0.4),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
    position: relative;
    clip-path: polygon(8px 0%, 100% 0%, 100% calc(100% - 8px), calc(100% - 8px) 100%, 0% 100%, 0% 8px);
    border-radius: 0 !important;
  }

  .futuristic-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.6s ease;
  }

  .futuristic-primary:hover::before {
    left: 100%;
  }

  .futuristic-primary:hover {
    box-shadow: 
      0 0 30px rgba(204, 255, 0, 0.6),
      inset 0 1px 0 rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }

  .futuristic-secondary {
    background: linear-gradient(135deg, rgba(42, 42, 42, 0.8), rgba(26, 26, 26, 0.8));
    color: #ffffff;
    border: 2px solid rgba(163, 163, 163, 0.3);
    box-shadow: 
      0 0 15px rgba(64, 64, 64, 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  .futuristic-secondary:hover {
    border-color: rgba(204, 255, 0, 0.7);
    box-shadow: 
      0 0 20px rgba(204, 255, 0, 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
    transform: translateY(-1px);
  }

  .futuristic-outline {
    background: rgba(0, 0, 0, 0.1);
    color: #ccff00;
    border: 2px solid rgba(204, 255, 0, 0.6);
    box-shadow: 
      0 0 15px rgba(204, 255, 0, 0.1),
      inset 0 0 20px rgba(204, 255, 0, 0.05);
  }

  .futuristic-outline:hover {
    background: rgba(204, 255, 0, 0.1);
    border-color: #ccff00;
    box-shadow: 
      0 0 25px rgba(204, 255, 0, 0.3),
      inset 0 0 30px rgba(204, 255, 0, 0.1);
  }

  .futuristic-ghost {
    background: rgba(255, 255, 255, 0.02);
    color: #ffffff;
    border: 0;
  }

  .futuristic-ghost:hover {
    background: rgba(204, 255, 0, 0.1);
    color: #ccff00;
    box-shadow: 0 0 15px rgba(204, 255, 0, 0.2);
    transform: scale(1.05);
  }

  .futuristic-destructive {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    color: #ffffff;
    border: 2px solid rgba(239, 68, 68, 0.5);
    box-shadow: 
      0 0 20px rgba(239, 68, 68, 0.4),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .futuristic-destructive:hover {
    box-shadow: 
      0 0 30px rgba(239, 68, 68, 0.6),
      inset 0 1px 0 rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }

  .futuristic-success {
    background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
    color: #ffffff;
    border: 2px solid rgba(34, 197, 94, 0.5);
    box-shadow: 
      0 0 20px rgba(34, 197, 94, 0.4),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .futuristic-success:hover {
    box-shadow: 
      0 0 30px rgba(34, 197, 94, 0.6),
      inset 0 1px 0 rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }

  .futuristic-info {
    background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%);
    color: #ffffff;
    border: 2px solid rgba(6, 182, 212, 0.5);
    box-shadow: 
      0 0 20px rgba(6, 182, 212, 0.4),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
    clip-path: polygon(8px 0%, 100% 0%, 100% calc(100% - 8px), calc(100% - 8px) 100%, 0% 100%, 0% 8px);
    border-radius: 0 !important;
  }

  .futuristic-info:hover {
    box-shadow: 
      0 0 30px rgba(6, 182, 212, 0.6),
      inset 0 1px 0 rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }

  /* Scan line animation */
  @keyframes scan-line {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }

  .scan-line::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(to bottom, transparent, rgba(204, 255, 0, 0.8), transparent);
    animation: scan-line 2s infinite;
  }

  /* Pulse animation */
  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 20px rgba(204, 255, 0, 0.4); }
    50% { box-shadow: 0 0 40px rgba(204, 255, 0, 0.8); }
  }

  .pulse-glow {
    animation: pulse-glow 2s infinite;
  }

  /* Corner cuts with box-shadow borders (not affected by clip-path) */
  .corner-cut {
    clip-path: polygon(8px 0%, 100% 0%, 100% calc(100% - 8px), calc(100% - 8px) 100%, 0% 100%, 0% 8px);
    border: none;
    border-radius: 0 !important;
    box-shadow: inset 0 0 0 1px var(--border);
  }

  .corner-cut-lg {
    clip-path: polygon(12px 0%, 100% 0%, 100% calc(100% - 12px), calc(100% - 12px) 100%, 0% 100%, 0% 12px);
    border: none;
    border-radius: 0 !important;
    box-shadow: inset 0 0 0 1px var(--border);
  }

  .corner-cut-sm {
    clip-path: polygon(4px 0%, 100% 0%, 100% calc(100% - 4px), calc(100% - 4px) 100%, 0% 100%, 0% 4px);
    border: none;
    border-radius: 0 !important;
    box-shadow: inset 0 0 0 1px var(--border);
  }

  /* Corner cuts for cards and containers */
  .card-corner-cut {
    clip-path: polygon(16px 0%, 100% 0%, 100% calc(100% - 16px), calc(100% - 16px) 100%, 0% 100%, 0% 16px);
    border: none;
    border-radius: 0 !important;
  }

  /* Add border to card-corner-cut that combines with existing shadows */
  .card-corner-cut.card-glow {
    box-shadow: 
      inset 0 0 0 1px var(--border),
      0 4px 20px rgba(0, 0, 0, 0.5),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  /* For non-glow cards, just add the border */
  .card-corner-cut:not(.card-glow) {
    box-shadow: inset 0 0 0 1px var(--border);
  }

  .tab-corner-cut {
    clip-path: polygon(6px 0%, 100% 0%, 100% calc(100% - 6px), calc(100% - 6px) 100%, 0% 100%, 0% 6px);
    border: none;
    border-radius: 0 !important;
    box-shadow: inset 0 0 0 1px var(--border);
  }


  /* Override any rounded borders for corner cut elements */
  .corner-cut,
  .corner-cut-lg,
  .corner-cut-sm,
  .card-corner-cut,
  .tab-corner-cut {
    border-radius: 0 !important;
  }

  /* Comprehensive override for all rounded corners in corner-cut elements */
  .corner-cut *,
  .corner-cut-lg *,
  .corner-cut-sm *,
  .card-corner-cut *,
  .tab-corner-cut *,
  .corner-cut::before,
  .corner-cut::after,
  .corner-cut-lg::before,
  .corner-cut-lg::after,
  .corner-cut-sm::before,
  .corner-cut-sm::after,
  .card-corner-cut::before,
  .card-corner-cut::after {
    border-radius: 0 !important;
  }

  /* Specific overrides for common rounded elements */
  .card-corner-cut,
  .card-corner-cut > *,
  .card-corner-cut [data-slot="card"],
  .gaming-card {
    border-radius: 0 !important;
  }


  /* Holographic shimmer effect */
  @keyframes holographic {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }

  .holographic {
    position: relative;
    background: linear-gradient(
      45deg,
      transparent 30%,
      rgba(255, 255, 255, 0.1) 50%,
      transparent 70%
    );
    background-size: 200% 100%;
    animation: holographic 3s infinite;
  }

  .holographic::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      rgba(204, 255, 0, 0.1) 0%,
      rgba(0, 255, 255, 0.1) 25%,
      rgba(255, 0, 255, 0.1) 50%,
      rgba(255, 255, 0, 0.1) 75%,
      rgba(204, 255, 0, 0.1) 100%
    );
    background-size: 400% 100%;
    animation: holographic 4s infinite reverse;
    pointer-events: none;
  }

  /* Enhanced button states */
  .btn-loading {
    position: relative;
    color: transparent !important;
  }

  .btn-loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 16px;
    height: 16px;
    margin-top: -8px;
    margin-left: -8px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    color: inherit;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  /* Success checkmark animation */
  @keyframes checkmark {
    0% { stroke-dashoffset: 100; }
    100% { stroke-dashoffset: 0; }
  }

  .checkmark {
    stroke-dasharray: 100;
    animation: checkmark 0.5s ease-in-out;
  }

  /* Power-on effect */
  @keyframes power-on {
    0% {
      opacity: 0;
      transform: scale(0.8);
      box-shadow: none;
    }
    50% {
      opacity: 0.8;
      transform: scale(1.05);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  .power-on {
    animation: power-on 0.3s ease-out;
  }

  /* Override old glow-button styles to work with new system */
  .glow-button {
    /* Remove old styles, let new button variants handle it */
  }
}
